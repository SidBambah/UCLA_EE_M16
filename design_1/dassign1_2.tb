//--------------------------------------------------------------------
//		Timescale
//		Means that if you do #1 in the initial block of your
//		testbench, time is advanced by 1ns instead of 1ps
//--------------------------------------------------------------------
`timescale 1ns / 1ps

//--------------------------------------------------------------------
//		Design Assign #1, Problem #2 Testbench.
//--------------------------------------------------------------------
module dassign1_2_tb();
//----------------------------------------------------------------
//		Signal Declarations
//----------------------------------------------------------------
reg	a,b,c,d,e;
integer i;
wire	y,z;
reg z1, z2;

//----------------------------------------------------------------
//		Instantiate modules Module
//----------------------------------------------------------------
dassign1_2	dassign1_2_1(y,z,a,b,c,d,e);
//----------------------------------------------------------------
//		Test Stimulus
//----------------------------------------------------------------
initial begin
   a=0;b=0;c=0;d=0;e=0;
  $dumpfile("dump.vcd"); $dumpvars;
//
// This is an example of cycling through all possible combinations
//
   for(i=5'b0;i<31;i=i+1) begin
      #2
      a=i[0];b=i[1];c=i[2];d=i[3];e=i[4];
      #1
      
     z1 = (~a & b & c) | ~(b & ~c) | (b & c);
     z2 = (a & b & ~c) | ~(a & ~(~b & c)) | (~(~d | e) & c);
     
    
   end
end
endmodule